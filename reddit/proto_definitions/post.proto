syntax = "proto3";

package reddit.post;

import "comment.proto";
import "subreddit.proto";

message Image {
  optional string url = 1;
}

message Video {
  repeated string frames = 2;
}

message PostMeta {
  optional string title = 1;
  optional string text = 2;
  optional int32 score = 3;
  optional PostState state = 4;
  optional string published = 5;
  optional int64 ID = 6;
  optional ContentType type = 9;
  repeated comment.Comment comment = 10; 
  optional subreddit.Subreddit subreddit = 11;
  repeated string tags = 12;

  enum ContentType {
    IMAGE = 0;
    VIDEO = 1;
  }

  enum PostState {
    NORMAL = 0;
    LOCKED = 1;
    HIDDEN = 2;
  }
}

message ImagePostResponse {
  PostMeta meta = 1;
  Image image = 2;
}

message VideoPostResponse {
  PostMeta meta = 1;
  Video video = 2;
}

message NewPostMeta {
  string title = 1;
  string text = 2;
  string state = 3;
}

message NewImagePostRequest {
  NewPostMeta meta = 1;
  Image image = 2;
}

message NewVideoPostRequest {
  NewPostMeta meta = 1;
  Video video = 2;
}

message GetPostContentRequest {
  optional int64 postID = 1;
}

message GetPostContentResponse {
  optional PostMeta.ContentType type = 3;
  string videoframe = 1;
  string imageurl = 2;
}

message RatePostRequest {
  optional int64 postID = 1;
  optional string rating = 2;

  enum Rating {
    UPVOTE = 0;
    DOWNVOTE = 1;
  }
}

message RatePostResponse {
  optional PostMeta meta = 1;
}

message GetPostMetaRequest {
  optional int64 postID = 1;
}

message GetPostMetaResponse {
  optional PostMeta meta = 1;
}

message GetNCommentsRequest {
  optional int32 num_comments = 1;
  optional int64 postID = 2;
}

message GetNCommentsResponse {
  optional comment.Comment comment = 1;
  optional bool has_replies = 2;
}

service PostService {
  rpc PostImage (NewImagePostRequest) returns (ImagePostResponse) {}
  rpc PostVideo (NewVideoPostRequest) returns (VideoPostResponse) {}
  rpc GetPostContent (GetPostContentRequest) returns (stream GetPostContentResponse) {}
  rpc RatePost (RatePostRequest) returns (RatePostResponse) {}
  rpc GetPost (GetPostMetaRequest) returns (GetPostMetaResponse) {}
  rpc GetNComments (GetNCommentsRequest) returns (stream GetNCommentsResponse) {}
}
