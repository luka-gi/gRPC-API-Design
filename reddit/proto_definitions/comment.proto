syntax = "proto3";

package reddit.comment;

import "user.proto";

message Comment {
  optional user.User author = 1;
  optional int32 score = 2;
  optional CommentState state = 3;
  optional string published = 4;
  optional string content = 5;
  optional int64 ID = 6;
  repeated Comment comment = 7;

  enum CommentState {
    NORMAL = 0;
    HIDDEN = 1;
  }
}

message NewCommentRequest {
  optional user.User author = 1;
  optional Comment.CommentState state = 2;
  optional string content = 3;
}

message NewCommentResponse {
  optional Comment comment = 1;
}

message RateCommentRequest {
  optional int64 commentID = 1;
  optional string rating = 2;

  enum Rating {
    UPVOTE = 0;
    DOWNVOTE = 1;
  }
}

message RateCommentResponse {
  optional Comment comment = 1;
}

message GetCommentRequest{
  optional int64 commentID = 1;
}

message GetCommentResponse{
  optional Comment comment = 1;
}

message GetNCommentsRequest {
  optional int32 num_comments = 1;
  optional int64 commentID = 2;
}

message GetNCommentsResponse {
  optional Comment comment = 1;
  optional Comment subcomment = 2;
}

service CommentService {
  rpc CreateComment (NewCommentRequest) returns (NewCommentResponse) {}
  rpc RateComment (RateCommentRequest) returns (RateCommentResponse) {}
  rpc GetComment (GetCommentRequest) returns (GetCommentResponse) {}
  rpc GetNComments (GetNCommentsRequest) returns (stream GetNCommentsResponse) {}
}